// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SignUp should match snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SignUp />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <label
          htmlFor="name"
>
          Name:
</label>,
        <input
          id="name"
          name="name"
          onChange={[Function]}
/>,
        <label
          htmlFor="email"
>
          E-Mail:
</label>,
        <input
          id="email"
          name="email"
          onChange={[Function]}
          type="email"
/>,
        <label
          htmlFor="password"
>
          Password
</label>,
        <input
          id="password"
          name="password"
          onChange={[Function]}
          type="password"
/>,
        <button
          onClick={undefined}
>
          Sign Up
</button>,
        <Link
          replace={false}
          to="/"
>
          <button>
                     Home 
          </button>
</Link>,
        undefined,
      ],
      "className": "sign-up",
      "onSubmit": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Name:",
          "htmlFor": "name",
        },
        "ref": null,
        "rendered": "Name:",
        "type": "label",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "id": "name",
          "name": "name",
          "onChange": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "E-Mail:",
          "htmlFor": "email",
        },
        "ref": null,
        "rendered": "E-Mail:",
        "type": "label",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "id": "email",
          "name": "email",
          "onChange": [Function],
          "type": "email",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Password",
          "htmlFor": "password",
        },
        "ref": null,
        "rendered": "Password",
        "type": "label",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "id": "password",
          "name": "password",
          "onChange": [Function],
          "type": "password",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Sign Up",
          "onClick": undefined,
        },
        "ref": null,
        "rendered": "Sign Up",
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <button>
             Home 
</button>,
          "replace": false,
          "to": "/",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": " Home ",
          },
          "ref": null,
          "rendered": " Home ",
          "type": "button",
        },
        "type": [Function],
      },
      undefined,
    ],
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <label
            htmlFor="name"
>
            Name:
</label>,
          <input
            id="name"
            name="name"
            onChange={[Function]}
/>,
          <label
            htmlFor="email"
>
            E-Mail:
</label>,
          <input
            id="email"
            name="email"
            onChange={[Function]}
            type="email"
/>,
          <label
            htmlFor="password"
>
            Password
</label>,
          <input
            id="password"
            name="password"
            onChange={[Function]}
            type="password"
/>,
          <button
            onClick={undefined}
>
            Sign Up
</button>,
          <Link
            replace={false}
            to="/"
>
            <button>
                         Home 
            </button>
</Link>,
          undefined,
        ],
        "className": "sign-up",
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Name:",
            "htmlFor": "name",
          },
          "ref": null,
          "rendered": "Name:",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "id": "name",
            "name": "name",
            "onChange": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "E-Mail:",
            "htmlFor": "email",
          },
          "ref": null,
          "rendered": "E-Mail:",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "id": "email",
            "name": "email",
            "onChange": [Function],
            "type": "email",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Password",
            "htmlFor": "password",
          },
          "ref": null,
          "rendered": "Password",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "id": "password",
            "name": "password",
            "onChange": [Function],
            "type": "password",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Sign Up",
            "onClick": undefined,
          },
          "ref": null,
          "rendered": "Sign Up",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <button>
               Home 
</button>,
            "replace": false,
            "to": "/",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": " Home ",
            },
            "ref": null,
            "rendered": " Home ",
            "type": "button",
          },
          "type": [Function],
        },
        undefined,
      ],
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
